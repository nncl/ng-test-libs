{"version":3,"file":"core.mjs","sources":["../../../projects/core/src/lib/core.module.ts","../../../projects/core/src/lib/core.service.ts","../../../projects/core/src/public-api.ts","../../../projects/core/src/core.ts"],"sourcesContent":["import { InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nexport interface CoreConfig {\n  uriApi: string;\n}\n\nexport const CORE_CONFIG_TOKEN = new InjectionToken<CoreConfig>('CORE_CONFIG');\n\n@NgModule({\n  declarations: [\n    // CoreComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [\n    // CoreComponent\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config: CoreConfig): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        { provide: CORE_CONFIG_TOKEN, useValue: config }\n      ]\n    };\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { CORE_CONFIG_TOKEN, CoreConfig } from './core.module';\n\nexport interface Users {\n  results: [],\n  info: object\n}\n\n// FIXME\n// export class UserServiceConfig {\n//   apiUrl = '';\n// }\n\n// TODO WHAT ABOUT NOT PROVIDING IT??? - https://flowup.cz/en/article/dependency-injection-in-angular-libraries\n// TODO {providedIn: 'root'}\n@Injectable({ providedIn: 'root' })\nexport class CoreService {\n  _apiUrl = 'https://randomuser.me/api/';\n\n  constructor(private http: HttpClient,\n              @Optional() @Inject(CORE_CONFIG_TOKEN) private readonly config?: CoreConfig) {\n    if (config?.uriApi) {\n      this._apiUrl = config.uriApi;\n    }\n  }\n\n  get(): Observable<Users> {\n    return this.http.get<Users>(this._apiUrl);\n  }\n}\n","/*\n * Public API Surface of core\n */\n\nexport * from './lib/core.service';\n// export * from './lib/core.component';\nexport * from './lib/core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;MAQa,iBAAiB,GAAG,IAAI,cAAc,CAAa,aAAa,EAAE;MAclE,UAAU;IACrB,YAAoC,YAAyB;QAC3D,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,+DAA+D,CAAC,CAAC;SACpE;KACF;IAED,OAAO,OAAO,CAAC,MAAkB;QAC/B,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE;aACjD;SACF,CAAC;KACH;;uGAfU,UAAU,kBAC8B,UAAU;wGADlD,UAAU,YAPnB,YAAY;QACZ,gBAAgB;wGAMP,UAAU,YARZ;YACP,YAAY;YACZ,gBAAgB;SACjB;2FAKU,UAAU;kBAZtB,QAAQ;mBAAC;oBACR,YAAY,EAAE;;qBAEb;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,gBAAgB;qBACjB;oBACD,OAAO,EAAE;;qBAER;iBACF;0DAEoD,UAAU;0BAAhD,QAAQ;;0BAAI,QAAQ;;;ACbnC;AACA;AACA;AACA;AAEA;AACA;MAEa,WAAW;IAGtB,YAAoB,IAAgB,EACgC,MAAmB;QADnE,SAAI,GAAJ,IAAI,CAAY;QACgC,WAAM,GAAN,MAAM,CAAa;QAHvF,YAAO,GAAG,4BAA4B,CAAC;QAIrC,IAAI,MAAM,EAAE,MAAM,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;SAC9B;KACF;IAED,GAAG;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3C;;wGAZU,WAAW,4CAIU,iBAAiB;4GAJtC,WAAW,cADE,MAAM;2FACnB,WAAW;kBADvB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;0BAKnB,QAAQ;;0BAAI,MAAM;2BAAC,iBAAiB;;;ACtBnD;;;;ACAA;;;;;;"}